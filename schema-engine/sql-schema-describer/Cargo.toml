[package]
edition = "2021"
name = "sql-schema-describer"
version = "0.1.0"

[features]
postgresql = ["relation_joins", "quaint/postgresql", "psl/postgresql"]
postgresql-native = ["postgresql", "quaint/postgresql-native", "quaint/pooled"]
mysql = ["relation_joins", "quaint/mysql", "psl/mysql"]
mysql-native = ["mysql", "quaint/mysql-native", "quaint/pooled"]
sqlite = ["quaint/sqlite", "psl/sqlite"]
sqlite-native = ["sqlite", "quaint/sqlite-native", "quaint/pooled"]
mssql = ["quaint/mssql"]
mssql-native = ["mssql", "quaint/mssql-native", "quaint/pooled"]
cockroachdb = ["relation_joins", "quaint/postgresql", "psl/cockroachdb"]
cockroachdb-native = [
    "cockroachdb",
    "quaint/postgresql-native",
    "quaint/pooled",
]
vendored-openssl = ["quaint/vendored-openssl"]
all-native = [
    "sqlite-native",
    "mysql-native",
    "postgresql-native",
    "mssql-native",
    "cockroachdb-native",
]
# TODO: At the moment of writing (rustc 1.77.0), can_have_capability from psl does not eliminate joins
# code from bundle for some reason, so we are doing it explicitly. Check with a newer version of compiler - if elimination
# happens successfully, we don't need this feature anymore
relation_joins = []

[dependencies]
prisma-value = { path = "../../libs/prisma-value" }
psl.workspace = true
quaint.workspace = true

either = "1.8.0"
async-trait.workspace = true
bigdecimal = "0.3"
enumflags2.workspace = true
indexmap.workspace = true
indoc.workspace = true
once_cell = "1.3"
regex.workspace = true
serde.workspace = true
tracing.workspace = true
tracing-error = "0.2"
tracing-futures.workspace = true

[dev-dependencies]
expect-test = "1.2.2"
pretty_assertions = "1"
test-macros = { path = "../../libs/test-macros" }
test-setup = { path = "../../libs/test-setup" }
tokio.workspace = true
